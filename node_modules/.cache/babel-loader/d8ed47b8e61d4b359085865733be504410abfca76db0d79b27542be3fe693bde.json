{"ast":null,"code":"import Pagy from 'pagy';\nimport 'intersection-observer';\ndocument.addEventListener('turbolinks:load', function () {\n  var observer = new IntersectionObserver(function (entries) {\n    var entry = entries[0];\n    if (entry.isIntersecting) {\n      var pagination = document.querySelector('#pagination');\n      var nextLink = pagination.querySelector('.next a');\n      if (nextLink) {\n        var url = nextLink.getAttribute('href');\n        nextLink.removeAttribute('href');\n        fetch(url, {\n          headers: {\n            'X-Requested-With': 'XMLHttpRequest'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          var posts = data.map(function (post) {\n            return \"\\n              <div class=\\\"post\\\">\\n                <h3>\".concat(post.title, \"</h3>\\n                <p>\").concat(post.content, \"</p>\\n              </div>\\n            \");\n          }).join('');\n          var postsContainer = document.querySelector('#posts');\n          postsContainer.insertAdjacentHTML('beforeend', posts);\n          var newPagination = pagination.cloneNode(true);\n          var newNextLink = newPagination.querySelector('.next a');\n          if (newNextLink) {\n            newNextLink.setAttribute('href', url);\n          }\n          pagination.replaceWith(newPagination);\n        })[\"catch\"](function (error) {\n          return console.error(error);\n        });\n      }\n    }\n  });\n  observer.observe(document.querySelector('#pagination .next'));\n});","map":{"version":3,"names":["Pagy","document","addEventListener","observer","IntersectionObserver","entries","entry","isIntersecting","pagination","querySelector","nextLink","url","getAttribute","removeAttribute","fetch","headers","then","response","json","data","posts","map","post","concat","title","content","join","postsContainer","insertAdjacentHTML","newPagination","cloneNode","newNextLink","setAttribute","replaceWith","error","console","observe"],"sources":["/home/sergey/RailsProjects/Insta/app/javascript/packs/posts.js"],"sourcesContent":["import Pagy from 'pagy';\nimport 'intersection-observer';\n\ndocument.addEventListener('turbolinks:load', () => {\n  const observer = new IntersectionObserver((entries) => {\n    const entry = entries[0];\n    if (entry.isIntersecting) {\n      const pagination = document.querySelector('#pagination');\n      const nextLink = pagination.querySelector('.next a');\n      if (nextLink) {\n        const url = nextLink.getAttribute('href');\n        nextLink.removeAttribute('href');\n        fetch(url, {\n          headers: { 'X-Requested-With': 'XMLHttpRequest' }\n        })\n          .then(response => response.json())\n          .then(data => {\n            const posts = data.map(post => `\n              <div class=\"post\">\n                <h3>${post.title}</h3>\n                <p>${post.content}</p>\n              </div>\n            `).join('');\n            const postsContainer = document.querySelector('#posts');\n            postsContainer.insertAdjacentHTML('beforeend', posts);\n            const newPagination = pagination.cloneNode(true);\n            const newNextLink = newPagination.querySelector('.next a');\n            if (newNextLink) {\n              newNextLink.setAttribute('href', url);\n            }\n            pagination.replaceWith(newPagination);\n          })\n          .catch(error => console.error(error));\n      }\n    }\n  });\n\n  observer.observe(document.querySelector('#pagination .next'));\n});\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAO,uBAAuB;AAE9BC,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,EAAE,YAAM;EACjD,IAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,UAACC,OAAO,EAAK;IACrD,IAAMC,KAAK,GAAGD,OAAO,CAAC,CAAC,CAAC;IACxB,IAAIC,KAAK,CAACC,cAAc,EAAE;MACxB,IAAMC,UAAU,GAAGP,QAAQ,CAACQ,aAAa,CAAC,aAAa,CAAC;MACxD,IAAMC,QAAQ,GAAGF,UAAU,CAACC,aAAa,CAAC,SAAS,CAAC;MACpD,IAAIC,QAAQ,EAAE;QACZ,IAAMC,GAAG,GAAGD,QAAQ,CAACE,YAAY,CAAC,MAAM,CAAC;QACzCF,QAAQ,CAACG,eAAe,CAAC,MAAM,CAAC;QAChCC,KAAK,CAACH,GAAG,EAAE;UACTI,OAAO,EAAE;YAAE,kBAAkB,EAAE;UAAiB;QAClD,CAAC,CAAC,CACCC,IAAI,CAAC,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAI,EAAE;QAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI,EAAI;UACZ,IAAMC,KAAK,GAAGD,IAAI,CAACE,GAAG,CAAC,UAAAC,IAAI;YAAA,oEAAAC,MAAA,CAEjBD,IAAI,CAACE,KAAK,gCAAAD,MAAA,CACXD,IAAI,CAACG,OAAO;UAAA,CAEpB,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;UACX,IAAMC,cAAc,GAAG1B,QAAQ,CAACQ,aAAa,CAAC,QAAQ,CAAC;UACvDkB,cAAc,CAACC,kBAAkB,CAAC,WAAW,EAAER,KAAK,CAAC;UACrD,IAAMS,aAAa,GAAGrB,UAAU,CAACsB,SAAS,CAAC,IAAI,CAAC;UAChD,IAAMC,WAAW,GAAGF,aAAa,CAACpB,aAAa,CAAC,SAAS,CAAC;UAC1D,IAAIsB,WAAW,EAAE;YACfA,WAAW,CAACC,YAAY,CAAC,MAAM,EAAErB,GAAG,CAAC;UACvC;UACAH,UAAU,CAACyB,WAAW,CAACJ,aAAa,CAAC;QACvC,CAAC,CAAC,SACI,CAAC,UAAAK,KAAK;UAAA,OAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QAAA,EAAC;MACzC;IACF;EACF,CAAC,CAAC;EAEF/B,QAAQ,CAACiC,OAAO,CAACnC,QAAQ,CAACQ,aAAa,CAAC,mBAAmB,CAAC,CAAC;AAC/D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}